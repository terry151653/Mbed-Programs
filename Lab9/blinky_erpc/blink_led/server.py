# You can write copyrights rules here. These rules will be copied into the outputs.

#
# Generated by erpcgen 1.9.0 on Sun Apr 17 22:46:11 2022.
#
# AUTOGENERATED - DO NOT EDIT
#

import erpc
from . import common, interface

# Client for LEDBlinkService
class LEDBlinkServiceService(erpc.server.Service):
    def __init__(self, handler):
        super(LEDBlinkServiceService, self).__init__(interface.ILEDBlinkService.SERVICE_ID)
        self._handler = handler
        self._methods = {
                interface.ILEDBlinkService.LED_ON_ID: self._handle_led_on,
                interface.ILEDBlinkService.LED_OFF_ID: self._handle_led_off,
            }

    def _handle_led_on(self, sequence, codec):
        # Read incoming parameters.
        led = codec.read_uint8()

        # Invoke user implementation of remote function.
        self._handler.led_on(led)

        # Prepare codec for reply message.
        codec.reset()

        # Construct reply message.
        codec.start_write_message(erpc.codec.MessageInfo(
            type=erpc.codec.MessageType.kReplyMessage,
            service=interface.ILEDBlinkService.SERVICE_ID,
            request=interface.ILEDBlinkService.LED_ON_ID,
            sequence=sequence))

    def _handle_led_off(self, sequence, codec):
        # Read incoming parameters.
        led = codec.read_uint8()

        # Invoke user implementation of remote function.
        self._handler.led_off(led)

        # Prepare codec for reply message.
        codec.reset()

        # Construct reply message.
        codec.start_write_message(erpc.codec.MessageInfo(
            type=erpc.codec.MessageType.kReplyMessage,
            service=interface.ILEDBlinkService.SERVICE_ID,
            request=interface.ILEDBlinkService.LED_OFF_ID,
            sequence=sequence))


